{
    "contents" : "## LOADING DATA\n\ntemp <- tempfile()                                        # set a temporary file\ndownload.file('http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip',\n              temp)                  # download (zip) file in the temporary file\n\ncontent.name <- unzip(temp, list=TRUE)[1]            # whatch inside the archive\n\ncontent.name                                            # there is only one file\n\ndata <- readLines(                                       # inspect lines of data\n    unz(temp,                                         # archive to unzip\n        content.name                   # the (only) file which is inside\n    ),\n    n=5                 # reading only the first 5 lines to inspect data\n)\n\ndata                                            # is a standard csv2 file format\n\ndata <- read.csv2(                            # data from the csv2 unzipped file\n    unz(temp,\n        content.name\n    ),\n    stringsAsFactors = FALSE\n)\n\nunlink(temp)                                             # remove temporary file\nrm(content.name, temp)\n\n\n## CREATE USEFUL STRUCTURES\n\nlibrary(dplyr)                                # upgrade data.frame to data_frame\nlibrary(stringr)\n\ndata <- as_data_frame(data)                                # create a data_frame\n\nglimpse(data)                                                     # inspect data\n\ndata <- data %>%\n    filter(grepl('^0*[12]{1}/2/2007$', Date)) %>%       # filter interested case\n    mutate_each(\n        funs(\n            str_replace_all(.,'\\\\?', 'NA')\n        )\n    ) %>%  # convert ? to NA\n    transmute(\n        Time=paste(Date, Time),           # we need e \"continuum\" temporal field\n        Date=as.Date(Date, format='%d/%m/%Y'),\n        Gap=as.numeric(Global_active_power),\n        Grp=as.numeric(Global_reactive_power),\n        V=as.numeric(Voltage),\n        Gi=as.numeric(Global_intensity),\n        S1=as.numeric(Sub_metering_1),\n        S2=as.numeric(Sub_metering_2),\n        S3=as.numeric(Sub_metering_3)\n    ) %>%  # create date structure\n    mutate(Week=as.factor(weekdays(Date)))\n\ndata$Time <- strptime(                            # convert string as time class\n    data$Time,                                       # from our time\n    format='%d/%m/%Y %H:%M:%S'                    # whith its format\n)      # note: this step cannot be performed into a dplyr's \"mutate\"\n\nglimpse(data)\n\nsummary(data)                                     # Note: here there aren't NAs!\n\n\n## CREATE PLOT 1 on device PNG: plot1.png\n\nSys.setlocale(\"LC_TIME\", locale = 'en_US.UTF-8')# I'm Italian...and the weekdays\n# (which marks the x axes) is locale-sensitive\n\npng('plot3.png')             # switch-on output on PNG device named as requested\n\nplot(                                                            # create a plot\n    x = c(data$Time,data$Time,data$Time),      # of time as indipendent variable\n    y = c(data$S1,data$S2,data$S3),              # and sumeterings as dipendents\n    type = 'n',                                           # do not plot anything\n    xlab='',                                       # without additional x labels\n    ylab = 'Energy sub metering'                       # and a label for y axis\n)                                                        # note: no title at all\n\nlines(data$Time, data$S1, col = 'black')           # add the first plot in black\nlines(data$Time, data$S2, col = 'red')                   # add the second in red\nlines(data$Time, data$S3, col = 'blue')              # and add the third in blue\n\nlegend(                                                         # add the legend\n    'topright',                                        # at the top right corner\n    legend = c('Sub_metering_1','Sub_metering_2','Sub_metering_3'),       # text\n    lty = 1,                                                  # referenced lines\n    col = c('black', 'red', 'blue')                            # relative colors\n)\n\ndev.off()                                      # finaly we switch-off the Device\n\nSys.setlocale(\"LC_TIME\")                 # restore the standard machine's locale\n\n\n## THE END\n",
    "created" : 1444178088595.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "39264130",
    "id" : "800B645C",
    "lastKnownWriteTime" : 1444179587,
    "path" : "~/ExData_Plotting1/Plot3.R",
    "project_path" : "Plot3.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}